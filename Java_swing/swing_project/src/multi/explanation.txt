
==============================
📘 GameServer.java 자세한 설명
==============================

🔹 포트: 7777 (고정) 
    --> 서버소켓이 연결한 포트번호와 클라이언트 요청을 보내는 소켓의 포트번호만 같으면 7777 아니어도 가능
🔹 기능: 플레이어 상태 관리, 적 슬라임 및 총알 관리, 클라이언트에게 게임 상태 브로드캐스트

1. Player 클래스
   - 각 플레이어의 ID, 좌표(x, y), 체력, 마나, 이동 키 입력 정보, 방향, 마지막 피격 시간 등을 관리

2. Enemy 클래스
   - 슬라임의 좌표, 프레임 애니메이션, 타겟 플레이어 ID 및 타겟 갱신 시간, 프레임 속도 제어 시간 등을 관리
   - update(Player target): 플레이어 위치를 향해 이동, 일정 시간마다 애니메이션 프레임 업데이트

3. Bullet 클래스
   - 총알의 위치, 방향(dx), 생성 시간 관리
   - 일정 시간이 지나면 만료

4. 주요 게임 상태 변수
   - players: 모든 플레이어 정보 (ConcurrentHashMap)
   - enemies: 모든 슬라임 (CopyOnWriteArrayList)
   - bullets: 모든 총알
   - clientOutputs: 클라이언트별 ObjectOutputStream 저장소 (브로드캐스트용)

5. start()
   - 서버 소켓 열고, 슬라임 5마리 생성
   - gameLoop()를 별도 스레드로 실행
   - 클라이언트가 접속하면 ClientHandler 스레드를 생성

6. gameLoop()
   - 약 30FPS (Thread.sleep(33))
   - updatePlayers(): 키 입력에 따라 이동 처리
   - updateEnemies(): 일정 주기마다 슬라임 타겟 갱신 및 이동
   - updateBullets(): 총알 이동 및 제거
   - checkDamage(): 슬라임 근접 공격으로 피격 처리 (0.5초 쿨다운)
   - spawnEnemies(): 10초마다 슬라임 10마리 생성
   - broadcastGameState(): 클라이언트들에게 전체 게임 상태 전송

7. ClientHandler
   - 클라이언트와 연결 후 ID 등록
   - 지속적으로 클라이언트 입력(Map 객체)을 받아 handleInput() 호출

8. handleInput()
   - 키 입력 목록("keys") → Player.keys에 저장
   - 액션("attack", "skill") 처리 → 총알 생성 또는 MP 차감

==============================
📘 GameClient.java 자세한 설명
==============================

🔹 GameClient 클래스는 JFrame 확장
🔹 내부에 GamePanel을 붙여 렌더링
🔹 서버 접속 → 입력 스트림/출력 스트림 생성

1. connectToServer()
   - 서버 IP와 포트를 통해 소켓 연결
   - ObjectOutputStream과 ObjectInputStream 초기화
   - 플레이어 이름을 서버로 전송

2. ServerListener (Thread)
   - 서버로부터 게임 상태(Map)를 지속적으로 수신
   - GamePanel.updateGameState() 호출로 게임판에 반영

3. GamePanel 클래스 (JPanel + KeyListener)
   - 배경, 캐릭터, 슬라임, 총알, 이펙트 등 이미지 렌더링
   - pressedKeys: 눌린 키를 서버에 주기적으로 전송
   - sendInput(): pressedKeys → 서버로 전송 (50ms 주기)
   - sendAction("attack"/"skill"): 단발 키 입력 서버 전송

4. SkillEffect 클래스
   - 클라이언트 전용 시각 효과 (X스킬)
   - 10장 이미지 순차 렌더링 후 제거 (Timer로 100ms 주기)

5. paintComponent(Graphics g)
   - 캐릭터/슬라임/총알/이펙트 렌더링
   - 내 캐릭터는 currentFrameImage로 애니메이션 처리
   - 체력/마나 바, 이름 표시

6. keyPressed / keyReleased
   - 방향키는 pressedKeys에 추가/제거
   - Z는 공격: sendAction("attack")
   - X는 스킬: 내 플레이어 찾고, MP 확인 후 sendAction("skill")

7. 주기적 타이머
   - 50ms: sendInput()
   - 100ms: repaint()
   - 200ms: 캐릭터 애니메이션 프레임 변경

==============================
전체적인 흐름
==============================
- GameServer 실행: 플레이어 및 게임 상태 관리
- GameClient 실행: 서버 접속 후 입력 전송 & 게임 렌더링
- 플레이어가 키 입력 → 서버로 전송 → 상태 갱신 → 다시 클라이언트로 브로드캐스트
- 슬라임은 플레이어를 타겟팅하며 이동하고 공격
